#!/bin/bash

## not sophisticated
## use the conf/ipgo.conf file
## create the server directory structure and populate it
## build the binary into the web site directory and rename it

## Create a golang source file with a constant string containing the time this script ran,
## and presumably the time the golang source was compiled.

export GOPATH=`pwd`
echo $GOPATH
DATE=$(date -u)
echo "// Programatically generated by install-ip" >$GOPATH/src/date_constant/date_constant.go
echo "package date_constant" >>$GOPATH/src/date_constant/date_constant.go
echo "const (DATE string = \"$DATE\")" >> $GOPATH/src/date_constant/date_constant.go
######################################################################################

CONF_FILE=conf/ipgo.conf

[ -f $CONF_FILE ] || { echo cannot find config file: $CONF_FILE; echo exiting; exit 0; }

# Read the website_directory and website_url settings from the config file.
while read opt val;
do
    if [ "$opt" = "website_directory" ]; then
        # val="${val%\"}";
        # val="${val#\"}";
        WEBSITE_DIRECTORY=$val
    fi
    if [ "$opt" = "website_url" ]; then
        WEBSITE_URL=$val
    fi
done < $CONF_FILE

echo ----- READ THIS CAREFULLY -----
echo installing to $WEBSITE_DIRECTORY
echo using url $WEBSITE_URL
echo "continue? (y/N)"

read -rsn1 c
if [ "$c" != "y" ]; then
    echo "Not installing."
    exit 1
fi

mkdir -p $WEBSITE_DIRECTORY
mkdir -p $WEBSITE_DIRECTORY/bin
mkdir -p $WEBSITE_DIRECTORY/css
mkdir -p $WEBSITE_DIRECTORY/images
mkdir -p $WEBSITE_DIRECTORY/html
mkdir -p $WEBSITE_DIRECTORY/conf

go build -o ${WEBSITE_DIRECTORY}/bin/ip.cgi  src/ip.go
install -m644 css/ip.css ${WEBSITE_DIRECTORY}/css/
install -m644 images/background.png ${WEBSITE_DIRECTORY}/images/
install -m644 html/ip.html ${WEBSITE_DIRECTORY}/html/
install -m644 html/error.html ${WEBSITE_DIRECTORY}/html/
install -m644 conf/ipgo.conf ${WEBSITE_DIRECTORY}/conf/

echo "Finished installing."
