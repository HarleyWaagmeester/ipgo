
Purpose:
	Provide a web service to respond with information
	regarding certain known aspects
	of the connected client.

Project parameters:
	Utilize the golang programming language.

Result:
	A hosted language named IPGO,
	utilizing the HTML and CSS languages,
	was created.

	IPGO is used to run external programs
	to obtain relevant information
	and to create web pages.

		    
Instructions:
	Set the website_directory setting in the conf/ipgo_config.json file, to your websites' directory.
	Set the website_url setting in the conf/ipgo_config.json file, to your websites' url.

	Execute ./install-ip.


        A directory structure will be created for you populated with the relevant files.

        your_website_directory
		              |
	    	              bin
	    	              |
	    	              html
	    	              |
	    	              css
                              |
		              images



To examine the target platform code that is generated by IPGO:

   Provided services are:
   	    website_url/bin/ip.cgi
	    website_url/bin/ip.cgi?help
	    website_url/bin/ip.cgi?version
	    website_url/bin/ip.cgi?host
	    website_url/bin/ip.cgi?whois
	    website_url/bin/ip.cgi?env

	    Load the page in a browser
	    and use the browsers' view source capability
	    i.e. CTRL-u

	    or

	    with the bash shell:
	    	 export QUERY_STRING=whois
	    	 export REMOTE_ADDR=8.8.8.8

	    then execute the commands:
	   	 ./ip.cgi?whois > tmp.html
		 emacs tmp.html


Example conf/ipgo_conf.json file:

{
    "website_url": "_your_website_url_",
    "website_directory": "_your_website_directory_"
}


codeperfect@gmail.com can be used for communication about this code base.